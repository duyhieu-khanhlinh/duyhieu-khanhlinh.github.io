{"version":3,"sources":["webpack:///./node_modules/clipboard-copy/index.js","webpack:///./src/components/GenerateLink/index.js","webpack:///./src/components/GenerateLink/styles.js","webpack:///./src/pages/generate-link.js"],"names":["makeError","DOMException","module","exports","async","text","navigator","clipboard","writeText","copyClipboardApi","err","span","document","createElement","textContent","style","whiteSpace","webkitUserSelect","userSelect","body","appendChild","selection","window","getSelection","range","createRange","removeAllRanges","selectNode","addRange","success","execCommand","removeChild","copyExecCommand","err2","GenerateLink","type","setType","useState","name","setName","showResult","setShowResult","successCopy","setSuccessCopy","copy","require","data","loading","useGuestData","URL","encodeURIComponent","replace","handleSetName","e","target","value","handleCopy","showAlert","alert","handleResult","___EmotionJSX","className","textAlign","Fragment","class","for","onChange","parseInt","placeholder","onClick","role","marginTop","href","rel","color","textDecoration","fontSize","padding","marginLeft","map","d","index","mapURL","code","desc","styWrapper","styles","GenerateLinkWrapper","MainLayout","css"],"mappings":";+EAIA,SAASA,IACP,OAAO,IAAIC,aAAa,6BAA8B,mBAFxDC,EAAOC,QA2CPC,eAA6BC,GAC3B,UAxCFD,eAAgCC,GAG9B,IAAKC,UAAUC,UACb,MAAMP,IAER,OAAOM,UAAUC,UAAUC,UAAUH,GAmC7BI,CAAiBJ,GACvB,MAAOK,GAEP,UApCJN,eAA+BC,GAE7B,MAAMM,EAAOC,SAASC,cAAc,QACpCF,EAAKG,YAAcT,EAGnBM,EAAKI,MAAMC,WAAa,MACxBL,EAAKI,MAAME,iBAAmB,OAC9BN,EAAKI,MAAMG,WAAa,MAGxBN,SAASO,KAAKC,YAAYT,GAG1B,MAAMU,EAAYC,OAAOC,eACnBC,EAAQF,OAAOV,SAASa,cAC9BJ,EAAUK,kBACVF,EAAMG,WAAWhB,GACjBU,EAAUO,SAASJ,GAGnB,IAAIK,GAAU,EACd,IACEA,EAAUP,OAAOV,SAASkB,YAAY,QACtC,QAEAT,EAAUK,kBACVJ,OAAOV,SAASO,KAAKY,YAAYpB,GAEnC,IAAKkB,EAAS,MAAM7B,IAQVgC,CAAgB3B,GACtB,MAAO4B,GACP,MAAMA,GAAQvB,GAAOV,Q,6FCsHZkC,MAtKf,WACE,MAAM,EAACC,EAAK,EAACC,GAAWC,mBAJT,IAKT,EAACC,EAAK,EAACC,GAAWF,sBAClB,EAACG,EAAW,EAACC,GAAiBJ,oBAAS,IACvC,EAACK,EAAY,EAACC,GAAkBN,oBAAS,GACzCO,EAAOC,EAAQ,SAEf,KAAEC,EAAI,QAAEC,GAAYC,cAEpBC,EAAO,qCAAoCC,mBAAmBZ,GAAMa,QAAQ,OAAQ,KAOpFC,EAAiBC,IACrBd,EAAQc,EAAEC,OAAOC,OACjBZ,GAAe,IAGXa,EAAapD,eAAOC,EAAMoD,QAAS,IAATA,OAAY,GAC1C,IACEb,EAAKvC,GACLsC,GAAe,GACfc,GAAaC,MAAM,uBACnB,MAAOhD,GACPiC,GAAe,GACfe,MAAM,0BAIJC,EAAevD,UACnBqC,GAAc,GACdE,GAAe,IAwGjB,OACEiB,YAAA,WACEA,YAAA,MAAIC,UAAU,SAAQ,gCACtBD,YAAA,MAAIC,UAAU,cAAa,yBAE1Bd,GAAWa,YAAA,MAAI7C,MAAO,CAAE+C,UAAW,WAAY,kBAE9Cf,GACAa,YAACG,WAAQ,KACPH,YAAA,OAAKC,UAAU,OACbD,YAAA,OAAKC,UAAU,4BACbD,YAAA,OAAKI,MAAM,cACTJ,YAAA,SAAOK,IAAI,sBAAqB,aAChCL,YAAA,UAAQI,MAAM,eAAeT,MAAOpB,EAAM+B,SA5IlCb,IACpBjB,EAAQ+B,SAASd,EAAEC,OAAOC,MAAO,KACjCd,GAAc,KA2IAmB,YAAA,UAAQL,MA3JT,GA2J0B,YACzBK,YAAA,UAAQL,MA3Jd,GA2J0B,oBA5JrB,IAyCTpB,EAEAyB,YAACG,WAAQ,KACPH,YAAA,OAAKI,MAAM,cACTJ,YAAA,SAAOK,IAAI,sBAAqB,aAChCL,YAAA,SACEL,MAAOjB,EACP4B,SAAUd,EACVjB,KAAK,OACL6B,MAAM,eACNI,YAAY,iBAGhBR,YAAA,UAAQzB,KAAK,SAAS6B,MAAM,kBAAkBK,QAASA,IAAMV,KAAgB,kBArD3E,IA4DJxB,EAEAyB,YAACG,WAAQ,KACPH,YAAA,UAAQzB,KAAK,SAAS6B,MAAM,kBAAkBK,QAASA,IAAMV,KAAoB,uBAHvF,IAqGMC,YAAA,OAAKC,UAAU,OAzFhBrB,EAzEQ,IA2ETL,EAEAyB,YAAA,OAAKC,UAAU,4BACbD,YAAA,OAAKI,MAAM,sBAAsBM,KAAK,QAAQvD,MAAO,CAAEwD,UAAW,SAChEX,YAAA,cAAQ,cAAmB,IAACA,YAAA,WAC5BA,YAAA,KAAGY,KAAMvB,EAAKK,OAAO,SAASmB,IAAI,aAAa1D,MAAO,CAAE2D,MAAO,QAASC,eAAgB,cACrF1B,GAEHW,YAAA,UACEzB,KAAK,SACL0B,UAAU,yBACV9C,MAAO,CAAE6D,SAAU,OAAQC,QAAS,UAAWC,WAAY,OAC3DT,QAASA,IAAMb,EAAWP,IAEzBP,EAAc,SAAW,UAxF5B,IA+FJP,EAEAyB,YAAA,OAAKC,UAAU,4BAA4B9C,MAAO,CAAEwD,UAAW,SAC7DX,YAAA,OAAKI,MAAM,oBACTJ,YAAA,SAAOI,MAAM,SACXJ,YAAA,aACEA,YAAA,UACEA,YAAA,UAAI,MACJA,YAAA,UAAI,QACJA,YAAA,UAAI,cACJA,YAAA,UAAI,UAGRA,YAAA,aACGd,EAAKiC,IAAI,CAACC,EAAGC,KACZ,MAAMC,EAAU,qCAAoChC,mBAAmB8B,EAAE1C,MAAMa,QAAQ,OAAQ,6BAA6B6B,EAAEG,OAC9H,OACEvB,YAAA,UACEA,YAAA,UAAKqB,EAAQ,GACbrB,YAAA,UAAKoB,EAAE1C,MACPsB,YAAA,UAAKoB,EAAEI,MACPxB,YAAA,UACEA,YAAA,KAAGY,KAAMU,EAAQ5B,OAAO,SAASmB,IAAI,aAAa1D,MAAO,CAAE4D,eAAgB,cACxEO,GAEHtB,YAAA,UACEzB,KAAK,SACL0B,UAAU,yBACV9C,MAAO,CAAE6D,SAAU,OAAQC,QAAS,UAAWC,WAAY,OAC3DT,QAASA,IAAMb,EAAW0B,IAC3B,qBA9BrB,EAvBwB,SC1ErB,MAAMG,EAAU,CAAA/C,KAAA,UAAAgD,OAAA,iICYRC,UARf,WACE,OACE3B,YAAC4B,IAAU,KACT5B,YAAA,OAAK6B,IAAKJ,GAAazB,YAAC1B,EAAY","file":"component---src-pages-generate-link-js-c4807a9388adca8d188b.js","sourcesContent":["/*! clipboard-copy. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* global DOMException */\n\nmodule.exports = clipboardCopy;\nfunction makeError() {\n  return new DOMException('The request is not allowed', 'NotAllowedError');\n}\nasync function copyClipboardApi(text) {\n  // Use the Async Clipboard API when available. Requires a secure browsing\n  // context (i.e. HTTPS)\n  if (!navigator.clipboard) {\n    throw makeError();\n  }\n  return navigator.clipboard.writeText(text);\n}\nasync function copyExecCommand(text) {\n  // Put the text to copy into a <span>\n  const span = document.createElement('span');\n  span.textContent = text;\n\n  // Preserve consecutive spaces and newlines\n  span.style.whiteSpace = 'pre';\n  span.style.webkitUserSelect = 'auto';\n  span.style.userSelect = 'all';\n\n  // Add the <span> to the page\n  document.body.appendChild(span);\n\n  // Make a selection object representing the range of text selected by the user\n  const selection = window.getSelection();\n  const range = window.document.createRange();\n  selection.removeAllRanges();\n  range.selectNode(span);\n  selection.addRange(range);\n\n  // Copy text to the clipboard\n  let success = false;\n  try {\n    success = window.document.execCommand('copy');\n  } finally {\n    // Cleanup\n    selection.removeAllRanges();\n    window.document.body.removeChild(span);\n  }\n  if (!success) throw makeError();\n}\nasync function clipboardCopy(text) {\n  try {\n    await copyClipboardApi(text);\n  } catch (err) {\n    // ...Otherwise, use document.execCommand() fallback\n    try {\n      await copyExecCommand(text);\n    } catch (err2) {\n      throw err2 || err || makeError();\n    }\n  }\n}","import React, { useState, Fragment } from 'react';\nimport useGuestData from '@/hooks/useGuestData';\n\nconst PERSONAL = 1;\nconst ALL = 2;\n\nfunction GenerateLink() {\n  const [type, setType] = useState(PERSONAL);\n  const [name, setName] = useState();\n  const [showResult, setShowResult] = useState(false);\n  const [successCopy, setSuccessCopy] = useState(false);\n  const copy = require('clipboard-copy')\n\n  const { data, loading } = useGuestData();\n\n  const URL = `https://arin.miftahussalam.com?to=${encodeURIComponent(name).replace(/%20/g, \"+\")}`;\n\n  const handleChange = (e) => {\n    setType(parseInt(e.target.value, 10));\n    setShowResult(false);\n  };\n\n  const handleSetName = (e) => {\n    setName(e.target.value);\n    setSuccessCopy(false);\n  };\n\n  const handleCopy = async (text, showAlert = false) => {\n    try {\n      copy(text);\n      setSuccessCopy(true);\n      showAlert && alert('successfully copied');\n    } catch (err) {\n      setSuccessCopy(false);\n      alert('something went wrong');\n    }\n  };\n\n  const handleResult = async () => {\n    setShowResult(true);\n    setSuccessCopy(false);\n  };\n\n  const renderContentType = () => {\n    if (type === PERSONAL) {\n      return (\n        <Fragment>\n          <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\">Nama Tamu</label>\n            <input\n              value={name}\n              onChange={handleSetName}\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"Nama tamu..\"\n            ></input>\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary\" onClick={() => handleResult()}>\n            Generate Link\n          </button>\n        </Fragment>\n      );\n    }\n\n    if (type === ALL) {\n      return (\n        <Fragment>\n          <button type=\"submit\" class=\"btn btn-primary\" onClick={() => handleResult(true)}>\n            Generate Link\n          </button>\n        </Fragment>\n      );\n    }\n  };\n\n  const renderResult = () => {\n    if (!showResult) return null;\n\n    if (type === PERSONAL) {\n      return (\n        <div className=\"col-md-4 col-md-offset-4\">\n          <div class=\"alert alert-success\" role=\"alert\" style={{ marginTop: '20px' }}>\n            <strong>Berhasil !</strong> <br />\n            <a href={URL} target=\"_blank\" rel=\"noreferrer\" style={{ color: 'green', textDecoration: 'underline' }}>\n              {URL}\n            </a>\n            <button\n              type=\"button\"\n              className=\"btn btn-default btn-xs\"\n              style={{ fontSize: '12px', padding: '4px 8px', marginLeft: '4px' }}\n              onClick={() => handleCopy(URL)}\n            >\n              {successCopy ? 'copied' : 'copy'}\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    if (type === ALL) {\n      return (\n        <div className=\"col-md-10 col-md-offset-1\" style={{ marginTop: '28px' }}>\n          <div class=\"table-responsive\">\n            <table class=\"table\">\n              <thead>\n                <tr>\n                  <th>No</th>\n                  <th>Nama</th>\n                  <th>Keterangan</th>\n                  <th>Link</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.map((d, index) => {\n                  const mapURL = `https://arin.miftahussalam.com?to=${encodeURIComponent(d.name).replace(/%20/g, \"+\")}&type=invitation&code=${d.code}`;\n                  return (\n                    <tr>\n                      <td>{index + 1}</td>\n                      <td>{d.name}</td>\n                      <td>{d.desc}</td>\n                      <td>\n                        <a href={mapURL} target=\"_blank\" rel=\"noreferrer\" style={{ textDecoration: 'underline' }}>\n                          {mapURL}\n                        </a>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-default btn-xs\"\n                          style={{ fontSize: '12px', padding: '4px 8px', marginLeft: '4px' }}\n                          onClick={() => handleCopy(mapURL)}\n                        >\n                          copy\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div>\n      <h2 className=\"title\">Generator of Link Invitation</h2>\n      <h3 className=\"title__sub\">Arin & Miftah Wedding</h3>\n\n      {loading && <h4 style={{ textAlign: 'center' }}>Memuat data..</h4>}\n\n      {!loading && (\n        <Fragment>\n          <div className=\"row\">\n            <div className=\"col-md-4 col-md-offset-4\">\n              <div class=\"form-group\">\n                <label for=\"exampleInputEmail1\">Tipe Link</label>\n                <select class=\"form-control\" value={type} onChange={handleChange}>\n                  <option value={PERSONAL}>Individu</option>\n                  <option value={ALL}>Semua Undangan</option>\n                </select>\n              </div>\n              {renderContentType()}\n            </div>\n          </div>\n          <div className=\"row\">{renderResult()}</div>\n        </Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default GenerateLink;\n","import { css } from '@emotion/core';\n\nexport const styWrapper = css`\n  padding: 24px 8px 8px 8px;\n\n  .title {\n    text-align: center;\n  }\n\n  .title__sub {\n    text-align: center;\n    font-family: 'Cookie', cursive;\n    font-size: 3em;\n  }\n`;\n","import React from 'react';\n\nimport MainLayout from '@components/Layout';\nimport GenerateLink from '@components/GenerateLink';\nimport { styWrapper } from '@components/GenerateLink/styles';\n\nfunction GenerateLinkWrapper() {\n  return (\n    <MainLayout>\n      <div css={styWrapper}>{<GenerateLink />}</div>\n    </MainLayout>\n  );\n}\n\nexport default GenerateLinkWrapper;\n"],"sourceRoot":""}